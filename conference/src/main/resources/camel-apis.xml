<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!-- START SNIPPET: e1 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

  <camelContext id="camel-apis" xmlns="http://camel.apache.org/schema/spring">

       	<camel:propertyPlaceholder id="properties" location="classpath:/config-accounts.properties" />
		<dataFormats>
	        <xstream id="jsonstream" permissions="au.com.virginmoney.conference.."/>     
		</dataFormats>

    <!-- Configure rest to use the camel-jetty component, and use json binding mode -->
    <!-- and tell to output json in pretty print mode -->
    <!-- setup context path and port number that Apache Tomcat will deploy this application with,
         as we use the servlet component, then we need to aid Camel to tell it these details so Camel
         knows the url to the REST services.
         Notice: This is optional, but needed if the RestRegistry should enlist accurate information.
         You can access the RestRegistry from JMX at runtime -->
    <!-- also enable swagger api, using the apiContextPath
         and enable CORS so the swagger-ui web console can access the swagger api docs -->
    <restConfiguration component="servlet" bindingMode="json"
                       contextPath="/" 
                       apiContextPath="api-docs" 
                       enableCORS="true">
      <!--  -->
	  <camel:endpointProperty key="servletName" value="RestServlet"/>

      <!-- we do not want json output in pretty mode -->
      <dataFormatProperty key="prettyPrint" value="false"/>
      <!-- hide null properties -->
      <dataFormatProperty key="include" value="NON_NULL"/>
      <!-- setup swagger api descriptions -->
      <apiProperty key="base.path" value="/"/>
      <apiProperty key="api.version" value="1.0"/>
      <apiProperty key="api.title" value="Conference APIs"/>
      <apiProperty key="api.description" value="Custom API for conference app"/>

    </restConfiguration>

	<!--  /sessions API -->
    <rest path="/sessions" apiDocs="true" consumes="application/json" produces="application/json" >
      <camel:get apiDocs="true" routeId="getSessionsForSpeakers" uri="/" outType="au.com.virginmoney.conference.Session" >
   		<param name="speakerName" type="query" description="Speaker to lookup" dataType="string"/>
   		<param name="date" type="query" description="Date to filter" dataType="string"/>
        <route>
			<doTry>
				<camel:to uri="log:DEBUG?showBody=false&amp;showHeaders=true"  ></camel:to>
				<camel:setHeader headerName="uri_part"><constant>sessions</constant></camel:setHeader>
				<camel:to uri="direct-vm:apiCandidatesHelper"></camel:to>
				<camel:to uri="direct-vm:transformToSessionList"></camel:to>
				
                <doCatch>
                    <!-- Catch multiple exceptions -->
                    <exception>java.lang.Exception</exception>
				  	<!-- 500 SERVER ERROR -->
			        <setHeader headerName="Exchange.HTTP_RESPONSE_CODE">
			          	<constant>500</constant>
			        </setHeader>
                </doCatch>
                <doFinally>
                </doFinally>
           	</doTry>
          </route>
      </camel:get>      
    	
    </rest>

  </camelContext>

</beans>
  <!-- END SNIPPET: e1 -->